<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.zutassociation.system.mapper.SysNewsMapper">

    <resultMap type="SysNews" id="SysNewsResult">
        <result property="newsId"       column="news_id"       />
        <result property="newsTitle"    column="news_title"    />
        <result property="newsContent"  column="news_content"  />
        <result property="status"         column="status"          />
        <result property="createBy"       column="create_by"       />
        <result property="createTime"     column="create_time"     />
        <result property="updateBy"       column="update_by"       />
        <result property="updateTime"     column="update_time"     />
        <result property="remark"         column="remark"          />
    </resultMap>

    <sql id="selectNewsVo">
        select news_id, news_title, cast(news_content as char) as news_content, status, create_by, create_time, update_by, update_time, remark
        from sys_news
    </sql>

    <select id="selectNewsById" parameterType="Long" resultMap="SysNewsResult">
        <include refid="selectNewsVo"/>
        where news_id = #{newsId}
    </select>

    <select id="selectNewsList" parameterType="SysNews" resultMap="SysNewsResult">
        <include refid="selectNewsVo"/>
        <where>
            <if test="newsTitle != null and newsTitle != ''">
                AND news_title like concat('%', #{newsTitle}, '%')
            </if>
            <if test="createBy != null and createBy != ''">
                AND create_by like concat('%', #{createBy}, '%')
            </if>
        </where>
    </select>

    <insert id="insertNews" parameterType="SysNews">
        insert into sys_news (
        <if test="newsTitle != null and newsTitle != '' ">news_title, </if>
        <if test="newsContent != null and newsContent != '' ">news_content, </if>
        <if test="status != null and status != '' ">status, </if>
        <if test="remark != null and remark != ''">remark,</if>
        <if test="createBy != null and createBy != ''">create_by,</if>
        create_time
        )values(
        <if test="newsTitle != null and newsTitle != ''">#{newsTitle}, </if>
        <if test="newsContent != null and newsContent != ''">#{newsContent}, </if>
        <if test="status != null and status != ''">#{status}, </if>
        <if test="remark != null and remark != ''">#{remark},</if>
        <if test="createBy != null and createBy != ''">#{createBy},</if>
        sysdate()
        )
    </insert>

    <update id="updateNews" parameterType="SysNews">
        update sys_news
        <set>
            <if test="newsTitle != null and newsTitle != ''">news_title = #{newsTitle}, </if>
            <if test="newsContent != null">news_content = #{newsContent}, </if>
            <if test="status != null and status != ''">status = #{status}, </if>
            <if test="updateBy != null and updateBy != ''">update_by = #{updateBy},</if>
            update_time = sysdate()
        </set>
        where news_id = #{newsId}
    </update>

    <delete id="deleteNewsById" parameterType="Long">
        delete from sys_news where news_id = #{newsId}
    </delete>

    <delete id="deleteNewsByIds" parameterType="Long">
        delete from sys_news where news_id in
        <foreach item="newsId" collection="array" open="(" separator="," close=")">
            #{newsId}
        </foreach>
    </delete>

</mapper>